class Solution {
public:
    bool helper(int node,vector<int>&vis,vector<vector<int>>&adj_list){
        for(auto it:adj_list[node]){
            if(vis[it]==-1){
                 vis[it]=!vis[node];
                 if(helper(it,vis,adj_list)==false)return false;
            }
            else if(vis[it]==vis[node])return false;
        }
        return true;
    }
    bool isBipartite(vector<vector<int>>& graph) {
        int n=graph.size();
        vector<vector<int>>adj_list(n,vector<int>());
        for(int i=0;i<n;i++){
            for(auto it:graph[i]){
                adj_list[i].push_back(it);
            }
        }
        vector<int>vis(n,-1);
        for(int i=0;i<n;i++){
            if(vis[i]==-1){
                vis[i]=0;
                if(helper(i,vis,adj_list)==false)return false;
            }
        }
        return true;
    }
};
