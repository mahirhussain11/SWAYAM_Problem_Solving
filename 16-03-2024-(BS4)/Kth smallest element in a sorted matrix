class Solution {
public:
    int cnt_less_than_equal_target(vector<vector<int>>&matrix,int target){
         int m=matrix.size();
         int n=matrix[0].size();
         int r=0;
         int c=n-1;
         int cnt=0;
         while(r<m && c>=0){
            if(matrix[r][c]<=target){
                cnt+=c+1;
                r++;
            }
            else{
                c--;
            }
         }
         return cnt;
    }
    int kthSmallest(vector<vector<int>>& matrix, int k) {
        int m=matrix.size();
        int n=matrix[0].size();
        int l=matrix[0][0];
        int r=matrix[m-1][n-1];
        while(l<r){
            int mid=l+(r-l)/2;
            int count=cnt_less_than_equal_target(matrix,mid);
            if(count<k)l=mid+1;
            else r=mid;
        }
        return l;
    }
};
