#include<bits/stdc++.h>
using namespace std;
const int mod = 1e9 + 7;
int helper(int idx, int amount, vector<int> &coins, vector<vector<int>> &dp)
{
    if (amount == 0)
        return 1;
    if (idx == 0)
    {
        if (amount % coins[0] == 0)
            return 1;
        else
            return 0;
    }
    if (dp[idx][amount] != -1)
        return dp[idx][amount];
    int not_take = helper(idx - 1, amount, coins, dp);
    int take = 0;
    if (coins[idx] <= amount)
        take = helper(idx, amount - coins[idx], coins, dp);
    return dp[idx][amount] = (take + not_take)%mod;
    }
int main(){
    int n, t;
    cin >> n >> t;
    vector<int> nums;
    for (int i = 0; i < n;i++){
        int a;
        cin >> a;
        nums.push_back(a);
    }
    vector<vector<int>>dp(n,vector<int>(t+1,-1));
    cout << helper(n-1, t, nums, dp) << endl;
    return 0;
}
