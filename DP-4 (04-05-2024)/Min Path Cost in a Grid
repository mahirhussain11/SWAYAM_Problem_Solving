class Solution {
public:
    int helper(int i, int j,vector<vector<int>>& grid, vector<vector<int>>& cost,  vector<vector<int>>&dp){
        if(i==grid.size()-1)return grid[i][j];
        if(dp[i][j]!=-1)return dp[i][j];
        int ans=1e9;
        for(int k=0;k<grid[0].size();k++){
            ans=min(ans,grid[i][j]+cost[grid[i][j]][k]+helper(i+1,k,grid,cost,dp));
        }
        return dp[i][j]=ans;
    }
    int minPathCost(vector<vector<int>>& grid, vector<vector<int>>& cost) {
        int m=grid.size();
        int n=grid[0].size();
        int ans=INT_MAX;
        vector<vector<int>>dp(m,vector<int>(n,-1));
        for(int i=0;i<n;i++){
            ans=min(ans,helper(0,i,grid,cost,dp));
        }
        return ans;

    }
};
