class Solution {
public:
    int findP(int node,vector<int>&par){
        if(node==par[node])return node;
        return findP(par[node],par);
    }
    vector<int> findRedundantConnection(vector<vector<int>>& edges) {
        int n=edges.size();
        vector<int>par(n+1,0);
        for(int i=0;i<=n;i++){
            par[i]=i;
        }
        vector<int>res;
        for(int i=0;i<edges.size();i++){
            int u=edges[i][0];
            int v=edges[i][1];
            int par1=findP(u,par);
            int par2=findP(v,par);
            if(par1==par2)res=edges[i];
            par[par1]=par2;
        }
        return res;
    }
};
