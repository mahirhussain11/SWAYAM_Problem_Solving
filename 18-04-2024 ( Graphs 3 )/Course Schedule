class Solution {
public:
    bool canFinish(int V, vector<vector<int>>& edges) {
        vector<int>indegree(V,0);
        vector<vector<int>>adj_list(V,vector<int>());
        for(auto it:edges){
            adj_list[it[0]].push_back(it[1]);
            indegree[it[1]]++;
        }
        queue<int>pq;
        for(int i=0;i<V;i++){
            if(indegree[i]==0)pq.push(i);
        }
        vector<int>topo_order;
        while(!pq.empty()){
            int curr=pq.front();
            pq.pop();
            topo_order.push_back(curr);
            for(auto it:adj_list[curr]){
                indegree[it]--;
                if(indegree[it]==0)pq.push(it);
            }
        }
        if(topo_order.size()==V)return true;
        return false;
    }
};
